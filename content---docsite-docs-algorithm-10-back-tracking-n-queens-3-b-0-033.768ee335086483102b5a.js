(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{390:function(n,e,r){"use strict";r.d(e,"a",(function(){return l})),r.d(e,"b",(function(){return s}));var t=r(0),a=r.n(t),c=a.a.createContext({}),o=function(n){var e=a.a.useContext(c),r=e;return n&&(r="function"==typeof n?n(e):Object.assign({},e,n)),r},l=function(n){var e=o(n.components);return a.a.createElement(c.Provider,{value:e},n.children)};var i="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.a.createElement(a.a.Fragment,{},e)}},p=Object(t.forwardRef)((function(n,e){var r=n.components,t=n.mdxType,c=n.originalType,l=n.parentName,i=function(n,e){var r={};for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&-1===e.indexOf(t)&&(r[t]=n[t]);return r}(n,["components","mdxType","originalType","parentName"]),p=o(r),s=t,b=p[l+"."+s]||p[s]||u[s]||c;return r?a.a.createElement(b,Object.assign({},{ref:e},i,{components:r})):a.a.createElement(b,Object.assign({},{ref:e},i))}));function s(n,e){var r=arguments,t=e&&e.mdxType;if("string"==typeof n||t){var c=r.length,o=new Array(c);o[0]=p;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=n,l[i]="string"==typeof n?n:t,o[1]=l;for(var s=2;s<c;s++)o[s]=r[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},72:function(n,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return o})),r.d(e,"rightToc",(function(){return l})),r.d(e,"default",(function(){return p}));r(0);var t=r(390);function a(){return(a=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(n[t]=r[t])}return n}).apply(this,arguments)}function c(n,e){if(null==n)return{};var r,t,a=function(n,e){if(null==n)return{};var r,t,a={},c=Object.keys(n);for(t=0;t<c.length;t++)r=c[t],e.indexOf(r)>=0||(a[r]=n[r]);return a}(n,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);for(t=0;t<c.length;t++)r=c[t],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(a[r]=n[r])}return a}var o={id:"n-queens",title:"N皇后问题",sidebar_label:"N皇后问题"},l=[{value:"题目",id:"题目",children:[]},{value:"思路",id:"思路",children:[]},{value:"代码实现",id:"代码实现",children:[]}],i={rightToc:l},u="wrapper";function p(n){var e=n.components,r=c(n,["components"]);return Object(t.b)(u,a({},i,r,{components:e,mdxType:"MDXLayout"}),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"题源/在线：",Object(t.b)("a",a({parentName:"li"},{href:"https://leetcode-cn.com/problems/n-queens/"}),"LeetCode: 51"))),Object(t.b)("h2",{id:"题目"},"题目"),Object(t.b)("p",null,"n 皇后问题研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。"),Object(t.b)("div",{align:"center"},Object(t.b)("img",{width:"260",src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/n6U0Xs.jpg"}),Object(t.b)("p",null,"图：8 皇后问题的一种解法")),Object(t.b)("p",null,"给定一个整数 n，返回所有不同的 n 皇后问题的解决方案。"),Object(t.b)("p",null,"每一种解法包含一个明确的 n 皇后问题的棋子放置方案，该方案中 'Q' 和 '.' 分别代表了皇后和空位。"),Object(t.b)("p",null,"示例:"),Object(t.b)("pre",null,Object(t.b)("code",a({parentName:"pre"},{className:"language-text"}),'输入: 4\n输出: [\n [".Q..",  // 解法 1\n  "...Q",\n  "Q...",\n  "..Q."],\n\n ["..Q.",  // 解法 2\n  "Q...",\n  "...Q",\n  ".Q.."]\n]\n解释: 4 皇后问题存在两个不同的解法。\n')),Object(t.b)("h2",{id:"思路"},"思路"),Object(t.b)("h2",{id:"代码实现"},"代码实现"),Object(t.b)("pre",null,Object(t.b)("code",a({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number} n\n * @return {string[][]}\n */\nvar solveNQueens = function(n) {\n    matrix = Array(n).fill('.').map(v => Array(n).fill(v));\n    cols = Array(n).fill('.');\n    diag1 = Array(2 * n - 1).fill('.');\n    diag2 = Array(2 * n - 1).fill('.');\n    ans = [];\n\n    function explore(r) {\n        if (r === n) {\n            // found one solution, add to the ans set\n            ans.push(matrix.map(v => v.join('')));\n            return;\n        }\n        // Try every column\n        for (let c = 0; c < n; c++) {\n            if (available(r, c)) {\n                addQueen(r, c);\n                explore(r + 1);\n                removeQueen(r, c);\n            }\n        }\n    }\n\n    function available(r, c) {\n        return cols[c] === '.'\n            && diag1[c + r] === '.'\n            && diag2[c - r + n - 1] === '.';\n    }\n\n    function addQueen(r, c) {\n        matrix[r][c] = 'Q';\n        cols[c] = 'x';\n        diag1[c + r] = 'x';\n        diag2[c - r + n - 1] = 'x';\n    }\n\n    function removeQueen(r, c) {\n        matrix[r][c] = '.';\n        cols[c] = '.';\n        diag1[c + r] = '.';\n        diag2[c - r + n - 1] = '.';\n    }\n\n    explore(0);\n    return ans;\n};\n")))}p.isMDXComponent=!0}}]);