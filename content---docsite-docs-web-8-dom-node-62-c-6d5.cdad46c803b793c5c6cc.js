(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{372:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return b}));n(0);var r=n(390);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l={id:"node",title:"节点",sidebar_label:"节点"},i=[],c={rightToc:i},p="wrapper";function b(e){var t=e.components,n=o(e,["components"]);return Object(r.b)(p,a({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"节点的类型有七种："),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Document：整个文档树的顶层节点"),Object(r.b)("li",{parentName:"ol"},"DocumentType：doctype标签",Object(r.b)("inlineCode",{parentName:"li"},"（比如<!DOCTYPE html>）")),Object(r.b)("li",{parentName:"ol"},"Element：网页的各种HTML标签",Object(r.b)("inlineCode",{parentName:"li"},"（比如<body>、<a>等）")),Object(r.b)("li",{parentName:"ol"},'Attribute：网页元素的属性（比如class="right"）'),Object(r.b)("li",{parentName:"ol"},"Text：标签之间或标签包含的文本"),Object(r.b)("li",{parentName:"ol"},"Comment：注释"),Object(r.b)("li",{parentName:"ol"},"DocumentFragment：文档的片段")),Object(r.b)("p",null,"浏览器提供一个原生的节点对象Node，上面这七种节点都继承了Node，因此具有一些共同的属性和方法。浏览器原生提供document节点，代表整个文档。文档的第一层只有一个节点，就是 HTML 网页的第一个标签",Object(r.b)("inlineCode",{parentName:"p"},"<html>"),"，它构成了树结构的根节点（root node），其他 HTML 标签节点都是它的下级节点。"),Object(r.b)("p",null,"除了根节点，其他节点都有三种层级关系。"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"父节点关系（parentNode）：直接的那个上级节点"),Object(r.b)("li",{parentName:"ul"},"子节点关系（childNodes）：直接的下级节点"),Object(r.b)("li",{parentName:"ul"},"同级节点关系（sibling）：拥有同一个父节点的节点")),Object(r.b)("p",null,"DOM 提供操作接口，用来获取这三种关系的节点。"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"子节点接口包括firstChild（第一个子节点）和lastChild（最后一个子节点）等属性"),Object(r.b)("li",{parentName:"ul"},"同级节点接口包括nextSibling（紧邻在后的那个同级节点）和previousSibling（紧邻在前的那个同级节点）属性。\n详细的Node对象的方法请参考这篇文章：",Object(r.b)("a",a({parentName:"li"},{href:"http://javascript.ruanyifeng.com/dom/node.htm"}),"DOM 模型概述，作者：阮一峰"))))}b.isMDXComponent=!0},390:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r),o=a.a.createContext({}),l=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=l(e.components);return a.a.createElement(o.Provider,{value:t},e.children)};var c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),b=l(n),u=r,m=b[i+"."+u]||b[u]||p[u]||o;return n?a.a.createElement(m,Object.assign({},{ref:t},c,{components:n})):a.a.createElement(m,Object.assign({},{ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=b;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);