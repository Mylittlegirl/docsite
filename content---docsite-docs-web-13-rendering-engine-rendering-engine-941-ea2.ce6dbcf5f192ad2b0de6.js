(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{196:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));n(0);var r=n(249);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c={id:"rendering-engine",title:"浏览器内核",sidebar_label:"浏览器内核"},l=[{value:"前言",id:"前言",children:[]},{value:"GUI 渲染线程",id:"gui-渲染线程",children:[]},{value:"JavaScript引擎线程",id:"javascript引擎线程",children:[]},{value:"定时触发器线程",id:"定时触发器线程",children:[]},{value:"事件触发线程",id:"事件触发线程",children:[]},{value:"异步http请求线程",id:"异步http请求线程",children:[]},{value:"GUI渲染线程与JS引擎线程互斥",id:"gui渲染线程与js引擎线程互斥",children:[]},{value:"JS的阻塞页面渲染",id:"js的阻塞页面渲染",children:[]}],p={rightToc:l},b="wrapper";function u(e){var t=e.components,n=i(e,["components"]);return Object(r.b)(b,a({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"前言"},"前言"),Object(r.b)("p",null,"对于浏览器的每个标签页都有属于自己的浏览器内核实例。而浏览器内核的主要功能是通过取得页面内容、整理信息（应用CSS）、计算和组合最终输出可视化的图像结果，因此也被称为渲染引擎(渲染进程)。"),Object(r.b)("p",null,"浏览器内核划分："),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"GUI 渲染线程")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"JavaScript引擎线程")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"定时触发器线程")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"事件触发线程")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"异步http请求线程"))),Object(r.b)("h2",{id:"gui-渲染线程"},"GUI 渲染线程"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"负责渲染浏览器界面，解析HTML，CSS，构建DOM树、CSS规则树以及渲染树，布局和绘制等。"),Object(r.b)("li",{parentName:"ul"},"当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时，该线程就会执行"),Object(r.b)("li",{parentName:"ul"},"GUI渲染线程与JS引擎线程是互斥的，当JS引擎执行时GUI线程会被挂起（相当于被冻结了），GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。")),Object(r.b)("h2",{id:"javascript引擎线程"},"JavaScript引擎线程"),Object(r.b)("p",null,"Javascript引擎，也可以称为JS内核，主要负责处理Javascript脚本程序，例如V8引擎。Javascript引擎线程理所当然是负责解析Javascript脚本，运行代码"),Object(r.b)("h2",{id:"定时触发器线程"},"定时触发器线程"),Object(r.b)("p",null,"setInterval与setTimeout所在线程，浏览器定时计数器并不是由JavaScript引擎计数的, 因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确, 因此通过单独线程来计时并触发定时是更为合理的方案。"),Object(r.b)("h2",{id:"事件触发线程"},"事件触发线程"),Object(r.b)("p",null,"当一个事件被触发时该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理。这些事件可以来自定时任务、也可来自浏览器内核的其他线程如鼠标点击、AJAX异步请求等，但由于JS的单线程关系所有这些事件都得排队等待JS引擎处理。"),Object(r.b)("h2",{id:"异步http请求线程"},"异步http请求线程"),Object(r.b)("p",null,"在XMLHttpRequest在连接后是通过浏览器新开一个线程请求， 将检测到状态变更时，如果有回调函数，异步线程就产生状态变更时将事件放到 JavaScript引擎的处理队列中等待处理。"),Object(r.b)("h2",{id:"gui渲染线程与js引擎线程互斥"},"GUI渲染线程与JS引擎线程互斥"),Object(r.b)("p",null,"js引擎线程在渲染的时候，很可能会执行一些DOM操作等，此时如果GUI渲染线程与JS引擎线程不互斥，那么当JS引擎执行一些DOM操作后会给GUI渲染线程的渲染带来迷惑，例如GUI渲染id= ‘robbie’的DOM节点div，此时JS线程却是要删除此节点，那么就会造成一种混乱，不知道该如何操作。为了渲染结果的一致性，GUI渲染线程与JS引擎线程被设定是互斥的，当JS引擎执行时GUI线程会被挂起（相当于被冻结了），GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。"),Object(r.b)("h2",{id:"js的阻塞页面渲染"},"JS的阻塞页面渲染"),Object(r.b)("p",null,"在默认情况下，js的下载、解析和执行阶段都会阻塞页面的执行。由上面的内容可知GUI渲染线程与JS引擎线程互斥，所以在JS执行的时候，GUI线程会被挂起。所以在代码中我们要尽量的将JS写在后面，等DOM执行完才执行。如果写在DOM树构建之前会加长白屏的时间。"),Object(r.b)("p",null,"参考链接：",Object(r.b)("a",a({parentName:"p"},{href:"https://juejin.im/post/5a6547d0f265da3e283a1df7#heading-9"}),"https://juejin.im/post/5a6547d0f265da3e283a1df7#heading-9")))}u.isMDXComponent=!0},249:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return o}));var r=n(0),a=n.n(r),i=a.a.createContext({}),c=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=c(e.components);return a.a.createElement(i.Provider,{value:t},e.children)};var p="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),u=c(n),o=r,d=u[l+"."+o]||u[o]||b[o]||i;return n?a.a.createElement(d,Object.assign({},{ref:t},p,{components:n})):a.a.createElement(d,Object.assign({},{ref:t},p))}));function o(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=u;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l[p]="string"==typeof e?e:r,c[1]=l;for(var o=2;o<i;o++)c[o]=n[o];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);