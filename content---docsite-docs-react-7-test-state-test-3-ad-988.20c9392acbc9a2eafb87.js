(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{320:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));n(0);var c=n(438),a=n(439);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var c in n)Object.prototype.hasOwnProperty.call(n,c)&&(e[c]=n[c])}return e}).apply(this,arguments)}function r(e,t){if(null==e)return{};var n,c,a=function(e,t){if(null==e)return{};var n,c,a={},o=Object.keys(e);for(c=0;c<o.length;c++)n=o[c],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(c=0;c<o.length;c++)n=o[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i={id:"state-test",title:"状态测试",sidebar_label:"状态测试"},l=[{value:"Action Test",id:"action-test",children:[{value:"同步 action",id:"同步-action",children:[]},{value:"异步 action",id:"异步-action",children:[]}]},{value:"Reducer Test",id:"reducer-test",children:[]},{value:"Selector Test",id:"selector-test",children:[]}],s={rightToc:l},p="wrapper";function u(e){var t=e.components,n=r(e,["components"]);return Object(c.b)(p,o({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"在 React App 的开发过程中，我们将状态测试主要分为 Action Test、Reducer Test 和 Selector Test。"),Object(c.b)("h2",{id:"action-test"},"Action Test"),Object(c.b)("h3",{id:"同步-action"},"同步 action"),Object(c.b)("p",null,"sync action 的单元测试相对比较简单，主要测试 action creator 的返回值是否正确，示例代码："),Object(c.b)("pre",null,Object(c.b)("code",o({parentName:"pre"},{className:"language-javascript"}),"describe('#action# setDiscountType', () => {\n    const lineId = '456adc81-7b5a-4863-95b1-b43d1539a233';\n    const discountType = 0;\n    it('should return setDiscountType action creator correctly', () => {\n        const action = setDiscountType(lineId, discountType);\n        expect(action).to.have.property('type', actionTypes.LINES_SET_REQUEST);\n        expect(action).to.have.property('lineId', lineId);\n        expect(action).to.have.property('discountType', discountType);\n    });\n}\n")),Object(c.b)("h3",{id:"异步-action"},"异步 action"),Object(c.b)("p",null,"async action 的单元测试相对比较复杂，结合项目中的 redux-thunk 进行测试，主要测试异步 action 中的REQUEST、SUCCESS、ERROR 在不同情况下是否按照预期进行调用，示例代码："),Object(c.b)("pre",null,Object(c.b)("code",o({parentName:"pre"},{className:"language-javascript"}),"describe('#action# setLinesData', () => {\n    const dispatch = jest.fn();\n    const lineId = '456adc81-7b5a-4863-95b1-b43d1539a233';\n    const lineData = {...};\n    const getState = jest.fn().mockReturnValue(Immutable({...}));\n\n    afterEach(jest.clearAllMocks);\n\n    it('should set lines data success', done => {\n        const utils = {\n            ProformaService: {\n                setLinesData: jest.fn().mockReturnValue(Promise.resolve())\n            }\n        };\n        setLinesData(lineId, false, lineData)(dispatch, getState, utils)\n            .then(() => {\n                expect(dispatch).toHaveBeenCalledWith({\n                    type: actionTypes.LINES_SET_REQUEST\n                });\n                expect(dispatch).toHaveBeenCalledWith({\n                    type: actionTypes.LINES_SET_SUCCESS\n                });\n                done();\n            })\n            .catch(done.fail);\n    });\n}\n")),Object(c.b)("p",null,"函数中的业务逻辑，需要根据具体的情况进行测试。"),Object(c.b)(a.a,{type:"must",mdxType:"Hint"},"异步 action 的测试一定要向其传入并执行 done 函数， Jest 会等 done 回调执行结束后，结束测试。否则 test 会显示通过，但有错误，也失去了测试的意义。"),Object(c.b)("h2",{id:"reducer-test"},"Reducer Test"),Object(c.b)("p",null,"reducer 的测试一般是期望 ",Object(c.b)("inlineCode",{parentName:"p"},"reducer(state, action) === newState"),"，其实这种方式和 ",Object(c.b)("inlineCode",{parentName:"p"},"(input) => output")," 的模式是一样的。"),Object(c.b)("p",null,"测试 state 首先要引入 Immutable 保证状态树的不可变性，示例代码："),Object(c.b)("pre",null,Object(c.b)("code",o({parentName:"pre"},{className:"language-javascript"}),"import Immutable from 'seamless-immutable';\n\nconst initialState = Immutable({...});\nconst action = { type: ..., payload: ...};\nconst expectedState = {...};\n\nexpect(reducer(initialState, action)).toEqual(expectedState);\n")),Object(c.b)("h2",{id:"selector-test"},"Selector Test"),Object(c.b)("p",null,"Selector Test 其实也是 ",Object(c.b)("inlineCode",{parentName:"p"},"(input) => output")," 这种模式，同样测试的时候也要引入 Immutable 来保证状态树的不可变性，示例代码："),Object(c.b)("pre",null,Object(c.b)("code",o({parentName:"pre"},{className:"language-javascript"}),"import Immutable from 'seamless-immutable';\n\nconst state = Immutable({...});\nconst expectedprops = {...};\n\nexpect(selector.getLines(state)).toEqual(expectedprops);\n")))}u.isMDXComponent=!0},439:function(e,t,n){"use strict";var c=n(0),a=n.n(c),o=n(441),r=n.n(o),i=(n(440),{best:{name:"推荐",color:"#50c610",icon:a.a.createElement("svg",{preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",fill:"none",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",stroke:"currentColor",className:"custom-hint__icon",style:{color:"#50c610"}},a.a.createElement("g",null,a.a.createElement("path",{d:"M22 11.07V12a10 10 0 1 1-5.93-9.14"}),a.a.createElement("polyline",{points:"23 3 12 14 9 11"})))},must:{name:"强制",color:"#ff4642",icon:a.a.createElement("svg",{preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",fill:"#ff4642",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024",stroke:"none",className:"custom-hint__icon"},a.a.createElement("g",null,a.a.createElement("path",{d:"M512 992c-262.4 0-480-217.6-480-480 0-262.4 217.6-480 480-480s480 217.6 480 480C992 774.4 774.4 992 512 992zM512 108.8C288 108.8 108.8 288 108.8 512c0 224 179.2 403.2 403.2 403.2s403.2-179.2 403.2-403.2C915.2 288 736 108.8 512 108.8zM697.6 684.8l-12.8 12.8c-6.4 6.4-19.2 6.4-25.6 0L512 550.4l-140.8 140.8c-6.4 6.4-19.2 6.4-25.6 0l-12.8-12.8c-6.4-6.4-6.4-19.2 0-25.6L473.6 512 326.4 371.2C320 358.4 320 345.6 326.4 339.2l12.8-12.8C345.6 320 358.4 320 371.2 326.4L512 473.6l140.8-140.8c6.4-6.4 19.2-6.4 25.6 0l12.8 12.8c6.4 6.4 6.4 19.2 0 25.6L550.4 512l140.8 140.8C704 665.6 704 678.4 697.6 684.8z"})))},tip:{name:"提示",color:"#3884ff",icon:a.a.createElement("svg",{preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",stroke:"none",className:"custom-hint__icon",style:{color:"#3884ff"}},a.a.createElement("g",null,a.a.createElement("path",{d:"M12.2 8.98c.06-.01.12-.03.18-.06.06-.02.12-.05.18-.09l.15-.12c.18-.19.29-.45.29-.71 0-.06-.01-.13-.02-.19a.603.603 0 0 0-.06-.19.757.757 0 0 0-.09-.18c-.03-.05-.08-.1-.12-.15-.28-.27-.72-.37-1.09-.21-.13.05-.23.12-.33.21-.04.05-.09.1-.12.15-.04.06-.07.12-.09.18-.03.06-.05.12-.06.19-.01.06-.02.13-.02.19 0 .26.11.52.29.71.1.09.2.16.33.21.12.05.25.08.38.08.06 0 .13-.01.2-.02M13 16v-4a1 1 0 1 0-2 0v4a1 1 0 1 0 2 0M12 3c-4.962 0-9 4.038-9 9 0 4.963 4.038 9 9 9 4.963 0 9-4.037 9-9 0-4.962-4.037-9-9-9m0 20C5.935 23 1 18.065 1 12S5.935 1 12 1c6.066 0 11 4.935 11 11s-4.934 11-11 11",fillRule:"evenodd"})))},warning:{name:"注意",color:"#fdbe12",icon:a.a.createElement("svg",{preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",fill:"none",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",stroke:"currentColor",className:"custom-hint__icon",style:{color:"#fdbe12"}},a.a.createElement("g",null,a.a.createElement("circle",{cx:"12",cy:"12",r:"10"}),a.a.createElement("line",{x1:"12",y1:"8",x2:"12",y2:"12"}),a.a.createElement("line",{x1:"12",y1:"16",x2:"12",y2:"16"})))}});t.a=function(e){var t=e.type,n=e.children;return a.a.createElement("div",{className:"custom-hint",style:{borderLeft:"4px solid ".concat(i[t].color)}},a.a.createElement("div",{style:{float:"left"}},i[t].icon),a.a.createElement("div",{dangerouslySetInnerHTML:{__html:r()("<strong>".concat(i[t].name,"</strong>：").concat(n))}}))}},440:function(e,t,n){}}]);