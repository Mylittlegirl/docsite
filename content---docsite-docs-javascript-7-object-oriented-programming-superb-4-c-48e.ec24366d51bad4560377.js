(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{192:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));n(0);var r=n(396);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p={title:"super",sidebar_label:"super"},c=[],a={rightToc:c},l="wrapper";function u(e){var t=e.components,n=s(e,["components"]);return Object(r.b)(l,o({},a,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"super这个关键字有两种用途：父类构造函数和父类原型对象/父类对象。"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"作为函数用只能用在子类的构造函数之中，代表父类的构造函数。ES6 中子类的构造函数规定必须要执行一次super函数。另外如果子类没有指定构造函数，ES2015 会提供默认的类构造函数。因此，没有必要提供一个空构造函数或一个简单地委托给它的父类的构造函数，如下例所示：")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-js"}),'class A {\n   constructor () {\n   }\n}\n\nclass A extends B {\n   /*eslint no-useless-constructor: "error"*/\n   constructor (...args) {\n     super(...args);\n   }\n}\n')),Object(r.b)("p",null,"注意，super虽然代表了父类A的构造函数，但是返回的是子类B的实例，即super内部的this指的是B的实例，因此super()在这里相当于A.prototype.constructor.call(this)。"),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"作为对象时，在普通方法中，指向父类的原型对象；在静态方法中，指向父类。")),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-js"}),"class A {\n p() {\n   return 2;\n }\n}\n\nclass B extends A {\n constructor() {\n   super();\n   console.log(super.p()); // 2\n }\n}\n\nlet b = new B();\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"调用 super 的原因：")),Object(r.b)("p",null,"首先this谁调用，就是谁。这个规则，一直都没有被违背。子类自己的this对象，必须先通过父类的构造函数完成塑造，得到与父类同样的实例属性和方法，然后再对其进行加工，加上子类自己的实例属性和方法。如果不调用super方法，子类就得不到this对象，那么对子类的进行加工，加上子类自己的实例属性和方法就无法实现。"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"React 中使用继承super(props) 的目的：")),Object(r.b)("p",null,"React 也必须遵循 JS ，强制的 在 constructor 中必须先调用 super 才能引用 this"),Object(r.b)("p",null,"但为什么要传递 props 参数 ?"),Object(r.b)("p",null,"是为了在 constructor 中 使用 this.props。即使我们没有传递参数，React 也会在我们的类组件 constructor 调用之后，为我们的组件实例分配 props。这样在除了 constructor 的地方，都可以调用 this.props，比如 lifecycle，custom methods。"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"这意味着你能够用 super() 代替 super(props) 吗？")),Object(r.b)("p",null,"最好不要，毕竟这样写在逻辑上并不明确确然，React 会在构造函数执行完毕之后给 this.props 赋值。但如此为之会使得 this.props 在 super 调用一直到构造函数结束期间值为 undefined。"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-js"}),"class Button extends React.Component {\n constructor(props) {\n   super(); // 😬 我们忘了传入 props\n   console.log(props);      // ✅ {}\n   console.log(this.props); // 😬 未定义\n }\n // ...\n}\n")),Object(r.b)("p",null,"React文档，里面有一段 Class components should always call the base constructor with props."),Object(r.b)("p",null,"Dan 最近写的一篇文章 ",Object(r.b)("a",o({parentName:"p"},{href:"https://www.google.com/url?q=https://overreacted.io/zh-hans/why-do-we-write-super-props/&sa=D&ust=1570507768778000"}),"Why Do We Write super(props)?")))}u.isMDXComponent=!0},396:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return i}));var r=n(0),o=n.n(r),s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},c=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)};var a="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,a=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),u=p(n),i=r,b=u[c+"."+i]||u[i]||l[i]||s;return n?o.a.createElement(b,Object.assign({},{ref:t},a,{components:n})):o.a.createElement(b,Object.assign({},{ref:t},a))}));function i(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,p=new Array(s);p[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[a]="string"==typeof e?e:r,p[1]=c;for(var i=2;i<s;i++)p[i]=n[i];return o.a.createElement.apply(null,p)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);