(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{396:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r),o=a.a.createContext({}),c=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=c(e.components);return a.a.createElement(o.Provider,{value:t},e.children)};var l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},s=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),s=c(n),u=r,b=s[i+"."+u]||s[u]||p[u]||o;return n?a.a.createElement(b,Object.assign({},{ref:t},l,{components:n})):a.a.createElement(b,Object.assign({},{ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[l]="string"==typeof e?e:r,c[1]=i;for(var u=2;u<o;u++)c[u]=n[u];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},64:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return s}));n(0);var r=n(396);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c={id:"security-guide",title:"安全规约",sidebar_label:"安全规约"},i=[{value:"JSX 防注入攻击",id:"jsx-防注入攻击",children:[]},{value:"dangerouslySetInnerHTML",id:"dangerouslysetinnerhtml",children:[]}],l={rightToc:i},p="wrapper";function s(e){var t=e.components,n=o(e,["components"]);return Object(r.b)(p,a({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"jsx-防注入攻击"},"JSX 防注入攻击"),Object(r.b)("p",null,"你可以放心地在 JSX 当中使用用户输入："),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"const title = response.potentiallyMaliciousInput;\n// 直接使用是安全的：\nconst element = <h1>{title}</h1>;\n")),Object(r.b)("p",null,"React DOM 在渲染之前默认会 ",Object(r.b)("a",a({parentName:"p"},{href:"http://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-on-html"}),"过滤")," 所有传入的值。它可以确保你的应用不会被注入攻击。所有的内容在渲染之前都被转换成了字符串。这样可以有效地防止 ",Object(r.b)("a",a({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cross-site_scripting"}),"XSS","(","跨站脚本",")")," 攻击。"),Object(r.b)("p",null,"这里React已经帮我们做了",Object(r.b)("a",a({parentName:"p"},{href:"https://facebook.github.io/react/docs/introducing-jsx.html#jsx-prevents-injection-attacks"}),"很多"),"，它会在运行时动态创建DOM节点然后填入文本内容（你也可以强制设置HTML内容，不过这样比较危险）"),Object(r.b)("h2",{id:"dangerouslysetinnerhtml"},"dangerouslySetInnerHTML"),Object(r.b)("p",null,"有时候需要将一段 html 的字符串插入页面中以 html 的形式展现，然而直接插入的话页面显示的就是这段字符串，而不会进行转义。可以用以下方法插入，便可以以 html 的形式展现："),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-jsx"}),'<div dangerouslySetInnerHTML={{__html: "<p>Hello, World</p>"}} />\n')))}s.isMDXComponent=!0}}]);