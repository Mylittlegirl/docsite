(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{220:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return i}));n(0);var r=n(396);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c={id:"unit-test",title:"单元测试",sidebar_label:"单元测试"},l=[{value:"Jest",id:"jest",children:[]},{value:"测试覆盖率",id:"测试覆盖率",children:[]}],b={rightToc:l},p="wrapper";function i(e){var t=e.components,n=o(e,["components"]);return Object(r.b)(p,a({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"TDD（Test-driven development）和单元测试密不可分，但 TDD 并不是银弹，不必一味地追求，为写测试而写测试，这需要自己去把控和权衡。"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。——",Object(r.b)("a",a({parentName:"p"},{href:"https://zh.wikipedia.org/wiki/%E8%82%AF%E7%89%B9%C2%B7%E8%B2%9D%E5%85%8B"}),"Kent Beck"))),Object(r.b)("p",null,"大牛的想法有他自己的底气，TDD 本身也是一个具有争议的话题。对于我们开发者还是秉持以下原则："),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"测试用例粒度要尽可能地小"),Object(r.b)("p",{parentName:"blockquote"},"写得要有意义和价值"),Object(r.b)("p",{parentName:"blockquote"},"不要教条主义")),Object(r.b)("p",null,"以上大而空，具体一点可以参考以下做法："),Object(r.b)("p",null,"确认每个组件是否都有执行过单元测试，确认每个 props 和 callbacks 都在集成测试的时候传递给了对应的子组件。"),Object(r.b)("p",null,"为了保证组件测试用例的小颗粒度和简单化，你需要熟悉一下 ",Object(r.b)("a",a({parentName:"p"},{href:"http://airbnb.io/enzyme/docs/api/selector.html"}),"selectors"),"，Enzyme 提供了丰富的 selector 去深入组件树。"),Object(r.b)("p",null,"另外，建议使用 ",Object(r.b)("a",a({parentName:"p"},{href:"http://sinonjs.org/"}),"sinon")," 来测试 callbacks 回调函数，不要在组件中测试业务逻辑，这真不是个好注意。而是应该将业务逻辑从组件中解耦并对其进行测试。"),Object(r.b)("h2",{id:"jest"},"Jest"),Object(r.b)("p",null,"Jest 是 Facebook 开源的一个测试框架，相对其他测试框架，其特点有："),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"开箱即用"),"：内置常用的测试工具，如自带断言、测试覆盖率等，减少了一些插件的配置。"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"特有的快照测试功能："),"通过比对 UI 代码生成的快照文件，确保组件呈现正确的样式。"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"速度快"),"：测试用例是多进程并行的，而且只执行发生改变的文件所对应的测试，提升了测试速度。"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"兼容性好"),"：兼容 Jasmine 框架语法，又新增了一些新的便捷功能。"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"JSDOM"),"：不需要真实 DOM 环境执行，而是 JSDOM 模拟的 DOM。")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"推荐"),"：将jest config 放在项目根目录下，可以省去一些配置上的麻烦和某些配置问题导致覆盖率为0%的问题。")),Object(r.b)("h2",{id:"测试覆盖率"},"测试覆盖率"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"把测试覆盖作为质量目标没有任何意义，而我们应该把它作为一种发现未被测试覆盖的代码的手段。 ——",Object(r.b)("a",a({parentName:"p"},{href:"https://zh.wikipedia.org/wiki/%E9%A9%AC%E4%B8%81%C2%B7%E7%A6%8F%E5%8B%92"}),"Martin Fowler"))),Object(r.b)("p",null,"使用测试覆盖率之前请先看这边文章：",Object(r.b)("a",a({parentName:"p"},{href:"http://www.ruanyifeng.com/blog/2015/06/istanbul.html"}),"代码覆盖率工具 Istanbul 入门教程")),Object(r.b)("p",null,"Jest 内置了测试覆盖率工具 ",Object(r.b)("a",a({parentName:"p"},{href:"https://github.com/gotwarlost/istanbul"}),"istanbul"),"，要开启，可以直接在命令中添加 ",Object(r.b)("inlineCode",{parentName:"p"},"--coverage")," 参数，或者在 package.json 文件进行更详细的",Object(r.b)("a",a({parentName:"p"},{href:"https://jestjs.io/docs/zh-Hans/configuration.html#collectcoverage-boolean"}),"配置"),"。"),Object(r.b)("p",null,"运行 istanbul 除了会再终端展示测试覆盖率情况，还会在项目下生产一个 coverage 目录，内附一个测试覆盖率的报告，让我们可以清晰看到分支的代码的测试情况。比如下面这个例子："),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),"// branches.js\nexport default (name) => {\n    if (name === 'Levon') {\n        return `Hello Levon`\n    } else {\n        return `Hello ${name}`\n    }\n}\n\n// branches.test.js\nimport branches './branches.js'\n\ndescribe('Multiple branches test', () => {\n    it('should get Hello Levon', () => {\n          expect(branches('Levon')).toBe('Hello Levon')\n    });\n    // it('should get Hello World', () => {\n    //       expect(branches('World')).toBe('Hello World')\n    // });  \n})\n")),Object(r.b)("p",null,"运行 ",Object(r.b)("inlineCode",{parentName:"p"},"jest --coverage")," 可看到生产的报告里展示了代码的覆盖率和未测试的行数："),Object(r.b)("p",null,Object(r.b)("img",a({parentName:"p"},{src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/QNgSXW.jpg",alt:"test coverage1"}))),Object(r.b)("p",null,"如果我们把 branches.test.js 中的注释去掉，跑遍测试对象中的所有分支，测试覆盖率就是100%了："),Object(r.b)("p",null,Object(r.b)("img",a({parentName:"p"},{src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/CK0h2A.jpg",alt:"test coverage2"}))))}i.isMDXComponent=!0},396:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return s}));var r=n(0),a=n.n(r),o=a.a.createContext({}),c=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=c(e.components);return a.a.createElement(o.Provider,{value:t},e.children)};var b="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},i=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,b=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),i=c(n),s=r,u=i[l+"."+s]||i[s]||p[s]||o;return n?a.a.createElement(u,Object.assign({},{ref:t},b,{components:n})):a.a.createElement(u,Object.assign({},{ref:t},b))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=i;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[b]="string"==typeof e?e:r,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}i.displayName="MDXCreateElement"}}]);