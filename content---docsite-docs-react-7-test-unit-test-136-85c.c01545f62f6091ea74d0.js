(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{282:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));n(0);var l=n(388),c=n(389);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var n,l,c=function(e,t){if(null==e)return{};var n,l,c={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var o={id:"unit-test",title:"单元测试",sidebar_label:"单元测试"},s=[{value:"Jest",id:"jest",children:[]},{value:"测试覆盖率",id:"测试覆盖率",children:[]}],i={rightToc:s},b="wrapper";function p(e){var t=e.components,n=a(e,["components"]);return Object(l.b)(b,r({},i,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"TDD（Test-driven development）和单元测试密不可分，但 TDD 并不是银弹，不必一味地追求，为写测试而写测试，这需要自己去把控和权衡。"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。——",Object(l.b)("a",r({parentName:"p"},{href:"https://zh.wikipedia.org/wiki/%E8%82%AF%E7%89%B9%C2%B7%E8%B2%9D%E5%85%8B"}),"Kent Beck"))),Object(l.b)("p",null,"大牛的想法有他自己的底气，TDD 本身也是一个具有争议的话题。对于我们开发者还是秉持以下原则："),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"测试用例粒度要尽可能地小"),Object(l.b)("p",{parentName:"blockquote"},"写得要有意义和价值"),Object(l.b)("p",{parentName:"blockquote"},"不要教条主义")),Object(l.b)("p",null,"以上大而空，具体一点可以参考以下做法："),Object(l.b)("p",null,"确认每个组件是否都有执行过单元测试，确认每个 props 和 callbacks 都在集成测试的时候传递给了对应的子组件。"),Object(l.b)("p",null,"为了保证组件测试用例的小颗粒度和简单化，你需要熟悉一下 ",Object(l.b)("a",r({parentName:"p"},{href:"http://airbnb.io/enzyme/docs/api/selector.html"}),"selectors"),"，Enzyme 提供了丰富的 selector 去深入组件树。"),Object(l.b)("p",null,"另外，建议使用 ",Object(l.b)("a",r({parentName:"p"},{href:"http://sinonjs.org/"}),"sinon")," 来测试 callbacks 回调函数，不要在组件中测试业务逻辑，这真不是个好注意。而是应该将业务逻辑从组件中解耦并对其进行测试。"),Object(l.b)("h2",{id:"jest"},"Jest"),Object(l.b)("p",null,"Jest 是 Facebook 开源的一个测试框架，相对其他测试框架，其特点有："),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"开箱即用"),"：内置常用的测试工具，如自带断言、测试覆盖率等，减少了一些插件的配置。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"特有的快照测试功能："),"通过比对 UI 代码生成的快照文件，确保组件呈现正确的样式。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"速度快"),"：测试用例是多进程并行的，而且只执行发生改变的文件所对应的测试，提升了测试速度。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"兼容性好"),"：兼容 Jasmine 框架语法，又新增了一些新的便捷功能。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"JSDOM"),"：不需要真实 DOM 环境执行，而是 JSDOM 模拟的 DOM。")),Object(l.b)(c.a,{type:"better",mdxType:"Hint"},"将jest config 放在项目根目录下，可以省去一些配置上的麻烦和某些配置问题导致覆盖率为0%的问题。"),Object(l.b)("h2",{id:"测试覆盖率"},"测试覆盖率"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"把测试覆盖作为质量目标没有任何意义，而我们应该把它作为一种发现未被测试覆盖的代码的手段。 ——",Object(l.b)("a",r({parentName:"p"},{href:"https://zh.wikipedia.org/wiki/%E9%A9%AC%E4%B8%81%C2%B7%E7%A6%8F%E5%8B%92"}),"Martin Fowler"))),Object(l.b)("p",null,"使用测试覆盖率之前请先看这边文章：",Object(l.b)("a",r({parentName:"p"},{href:"http://www.ruanyifeng.com/blog/2015/06/istanbul.html"}),"代码覆盖率工具 Istanbul 入门教程")),Object(l.b)("p",null,"Jest 内置了测试覆盖率工具 ",Object(l.b)("a",r({parentName:"p"},{href:"https://github.com/gotwarlost/istanbul"}),"istanbul"),"，要开启，可以直接在命令中添加 ",Object(l.b)("inlineCode",{parentName:"p"},"--coverage")," 参数，或者在 package.json 文件进行更详细的",Object(l.b)("a",r({parentName:"p"},{href:"https://jestjs.io/docs/zh-Hans/configuration.html#collectcoverage-boolean"}),"配置"),"。"),Object(l.b)("p",null,"运行 istanbul 除了会再终端展示测试覆盖率情况，还会在项目下生产一个 coverage 目录，内附一个测试覆盖率的报告，让我们可以清晰看到分支的代码的测试情况。比如下面这个例子："),Object(l.b)("pre",null,Object(l.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"// branches.js\nexport default (name) => {\n    if (name === 'Levon') {\n        return `Hello Levon`\n    } else {\n        return `Hello ${name}`\n    }\n}\n\n// branches.test.js\nimport branches './branches.js'\n\ndescribe('Multiple branches test', () => {\n    it('should get Hello Levon', () => {\n          expect(branches('Levon')).toBe('Hello Levon')\n    });\n    // it('should get Hello World', () => {\n    //       expect(branches('World')).toBe('Hello World')\n    // });  \n})\n")),Object(l.b)("p",null,"运行 ",Object(l.b)("inlineCode",{parentName:"p"},"jest --coverage")," 可看到生产的报告里展示了代码的覆盖率和未测试的行数："),Object(l.b)("p",null,Object(l.b)("img",r({parentName:"p"},{src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/QNgSXW.jpg",alt:"test coverage1"}))),Object(l.b)("p",null,"如果我们把 branches.test.js 中的注释去掉，跑遍测试对象中的所有分支，测试覆盖率就是100%了："),Object(l.b)("p",null,Object(l.b)("img",r({parentName:"p"},{src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/CK0h2A.jpg",alt:"test coverage2"}))))}p.isMDXComponent=!0},389:function(e,t,n){"use strict";var l=n(0),c=n.n(l),r=n(391),a=n.n(r),o=(n(390),{better:{name:"推荐",color:"#50c610",icon:c.a.createElement("svg",{preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",fill:"none",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",stroke:"currentColor",className:"custom-hint__icon",style:{color:"#50c610"}},c.a.createElement("g",null,c.a.createElement("path",{d:"M22 11.07V12a10 10 0 1 1-5.93-9.14"}),c.a.createElement("polyline",{points:"23 3 12 14 9 11"})))},must:{name:"强制",color:"#ff4642",icon:c.a.createElement("svg",{preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",fill:"#ff4642",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024",stroke:"none",className:"custom-hint__icon"},c.a.createElement("g",null,c.a.createElement("path",{d:"M512 992c-262.4 0-480-217.6-480-480 0-262.4 217.6-480 480-480s480 217.6 480 480C992 774.4 774.4 992 512 992zM512 108.8C288 108.8 108.8 288 108.8 512c0 224 179.2 403.2 403.2 403.2s403.2-179.2 403.2-403.2C915.2 288 736 108.8 512 108.8zM697.6 684.8l-12.8 12.8c-6.4 6.4-19.2 6.4-25.6 0L512 550.4l-140.8 140.8c-6.4 6.4-19.2 6.4-25.6 0l-12.8-12.8c-6.4-6.4-6.4-19.2 0-25.6L473.6 512 326.4 371.2C320 358.4 320 345.6 326.4 339.2l12.8-12.8C345.6 320 358.4 320 371.2 326.4L512 473.6l140.8-140.8c6.4-6.4 19.2-6.4 25.6 0l12.8 12.8c6.4 6.4 6.4 19.2 0 25.6L550.4 512l140.8 140.8C704 665.6 704 678.4 697.6 684.8z"})))},tip:{name:"提示",color:"#3884ff",icon:c.a.createElement("svg",{preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",stroke:"none",className:"custom-hint__icon",style:{color:"#3884ff"}},c.a.createElement("g",null,c.a.createElement("path",{d:"M12.2 8.98c.06-.01.12-.03.18-.06.06-.02.12-.05.18-.09l.15-.12c.18-.19.29-.45.29-.71 0-.06-.01-.13-.02-.19a.603.603 0 0 0-.06-.19.757.757 0 0 0-.09-.18c-.03-.05-.08-.1-.12-.15-.28-.27-.72-.37-1.09-.21-.13.05-.23.12-.33.21-.04.05-.09.1-.12.15-.04.06-.07.12-.09.18-.03.06-.05.12-.06.19-.01.06-.02.13-.02.19 0 .26.11.52.29.71.1.09.2.16.33.21.12.05.25.08.38.08.06 0 .13-.01.2-.02M13 16v-4a1 1 0 1 0-2 0v4a1 1 0 1 0 2 0M12 3c-4.962 0-9 4.038-9 9 0 4.963 4.038 9 9 9 4.963 0 9-4.037 9-9 0-4.962-4.037-9-9-9m0 20C5.935 23 1 18.065 1 12S5.935 1 12 1c6.066 0 11 4.935 11 11s-4.934 11-11 11",fillRule:"evenodd"})))},warning:{name:"注意",color:"#fdbe12",icon:c.a.createElement("svg",{preserveAspectRatio:"xMidYMid meet",height:"1em",width:"1em",fill:"none",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",stroke:"currentColor",className:"custom-hint__icon",style:{color:"#fdbe12"}},c.a.createElement("g",null,c.a.createElement("circle",{cx:"12",cy:"12",r:"10"}),c.a.createElement("line",{x1:"12",y1:"8",x2:"12",y2:"12"}),c.a.createElement("line",{x1:"12",y1:"16",x2:"12",y2:"16"})))}});t.a=function(e){var t=e.type,n=e.children;return c.a.createElement("div",{className:"custom-hint",style:{borderLeft:"4px solid ".concat(o[t].color)}},c.a.createElement("div",{style:{float:"left"}},o[t].icon),c.a.createElement("div",{dangerouslySetInnerHTML:{__html:a()("<strong>".concat(o[t].name,"</strong>：").concat(n))}}))}},390:function(e,t,n){}}]);