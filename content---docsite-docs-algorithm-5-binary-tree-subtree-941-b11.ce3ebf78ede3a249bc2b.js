(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{118:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return u}));t(0);var r=t(396);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c={id:"subtree",title:"二叉树的子结构",sidebar_label:"二叉树的子结构"},i=[{value:"题目",id:"题目",children:[]},{value:"思路",id:"思路",children:[]},{value:"特殊测试",id:"特殊测试",children:[]},{value:"代码实现",id:"代码实现",children:[]},{value:"拓展",id:"拓展",children:[]}],b={rightToc:i},o="wrapper";function u(e){var n=e.components,t=l(e,["components"]);return Object(r.b)(o,a({},b,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"题源：《剑指Offer: 面试题 26》P148"),Object(r.b)("li",{parentName:"ul"},"在线：",Object(r.b)("a",a({parentName:"li"},{href:"https://www.nowcoder.com/practice/6e196c44c7004d15b1610b9afca8bd88"}),"牛客网"))),Object(r.b)("h2",{id:"题目"},"题目"),Object(r.b)("p",null,"输入两棵二叉树 A 和 B，判断 B 是不是 A 的子结构。二叉树节点的定义如下："),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"function TreeNode(val) {\n    this.val = val;\n    this.left = this.right = null;\n}\n")),Object(r.b)("div",{align:"center"},Object(r.b)("img",{width:"380",src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/b0OD25.png"}),Object(r.b)("p",null,"图1：右边的树 B 是左边的树 A 的子结构")),Object(r.b)("h2",{id:"思路"},"思路"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"在树 A 中找到和树 B 的根结点的值一样的节点 R"),Object(r.b)("li",{parentName:"ol"},"递归判断树 A 中以 R 为根结点的子树是不是包含和树 B 一样的结构"),Object(r.b)("li",{parentName:"ol"},"递归的终止条件是到达树 A 或树 B 的叶节点")),Object(r.b)("div",{align:"center"},Object(r.b)("img",{width:"380",src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/EB7CVW.png"}),Object(r.b)("p",null,"图2：A 和 B 的根节点相同，但 A 的根节点下面(实线部分)的结构和 B 的结构不一致")),Object(r.b)("div",{align:"center"},Object(r.b)("img",{width:"380",src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/epxJGQ.png"}),Object(r.b)("p",null,"图3：A 中找到第二个值为 8 的节点，该节点下面(实线部分)的结构和 B 的结构一致")),Object(r.b)("h2",{id:"特殊测试"},"特殊测试"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"两个二叉树的一个或两个根节点为 null"),Object(r.b)("li",{parentName:"ul"},"二叉树的所有子节点都没有左子树或右子树")),Object(r.b)("h2",{id:"代码实现"},"代码实现"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-js"}),"function isSubtree (a, b) {\n    let ans = false;\n    if (a && b) {\n        if (a.val === b.val) {\n            ans = isSubtreeFromThisNode(a, b)\n        }\n        if (!ans) {\n            ans = isSubtree(a.left, b)\n        }\n        if (!ans) {\n            ans = isSubtree(a.right, b)\n        }\n    }\n    return ans;\n}\n\nfunction isSubtreeFromThisNode(a, b) {\n    // b 的叶节点已经遍历完\n    if (!b) {\n        return true;\n    }\n    // b 节点还存在，但 a 已经没有节点了\n    if (!a) {\n        return false;\n    }\n    if (a.val !== b.val) {\n        return false;\n    }\n    return isSubtreeFromThisNode(a.left, b.left) &&\n        isSubtreeFromThisNode(a.right, b.right)\n}\n")),Object(r.b)("h2",{id:"拓展"},"拓展"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"如果 A 的一个子树包括 A 的一个节点和这个节点的",Object(r.b)("strong",{parentName:"li"},"所有子孙"),"。那该怎么办呢？例如图2，",Object(r.b)("inlineCode",{parentName:"li"},"8-9-2")," 在 A 中只是中间一块，不能算是 A 的子树，故此时返回 ",Object(r.b)("inlineCode",{parentName:"li"},"false"),"。"),Object(r.b)("li",{parentName:"ul"},"详情请参考：",Object(r.b)("a",a({parentName:"li"},{href:"https://leetcode-cn.com/problems/subtree-of-another-tree/"}),"LeetCode: 572"))))}u.isMDXComponent=!0},396:function(e,n,t){"use strict";t.d(n,"a",(function(){return i})),t.d(n,"b",(function(){return s}));var r=t(0),a=t.n(r),l=a.a.createContext({}),c=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},i=function(e){var n=c(e.components);return a.a.createElement(l.Provider,{value:n},e.children)};var b="mdxType",o={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,b=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),u=c(t),s=r,p=u[i+"."+s]||u[s]||o[s]||l;return t?a.a.createElement(p,Object.assign({},{ref:n},b,{components:t})):a.a.createElement(p,Object.assign({},{ref:n},b))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,c=new Array(l);c[0]=u;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i[b]="string"==typeof e?e:r,c[1]=i;for(var s=2;s<l;s++)c[s]=t[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);