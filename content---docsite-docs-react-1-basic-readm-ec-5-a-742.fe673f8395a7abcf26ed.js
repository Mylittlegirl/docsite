(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{202:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return l}));t(0);var r=t(388);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c={},i=[{value:"有限状态机 FSM",id:"有限状态机-fsm",children:[]},{value:"组件的本质",id:"组件的本质",children:[]}],p={rightToc:i},u="wrapper";function l(e){var n=e.components,t=o(e,["components"]);return Object(r.b)(u,a({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"2-react-基础"},"2. React 基础"),Object(r.b)("h2",{id:"有限状态机-fsm"},"有限状态机 FSM"),Object(r.b)("p",null,"React 的主要思想是通过构建可复用的组件来构建用户界面。所谓的组件，其实就是有限状态机（FSM），通过状态渲染对应的界面，且每个组件都有自己的生命周期，它规定来组件的状态和方法需要在哪个阶段改变和执行。"),Object(r.b)("h2",{id:"组件的本质"},"组件的本质"),Object(r.b)("p",null,"组件可以用来 ",Object(r.b)("strong",{parentName:"p"},"复用")," 和 ",Object(r.b)("strong",{parentName:"p"},"分治")," ，复用主要是为了减少冗余代码，提高组件的可重用性，分治主要是为了方便地对代码进行切割管理，但究其本质其实是两个字："),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"状态")),Object(r.b)("p",null,"React 通过状态来实现对组件的管理，还引入了组件的生命周期这个概念。通过它，就可以实现组件的状态控制，从而达到 ",Object(r.b)("inlineCode",{parentName:"p"},"生命周期--\x3e状态--\x3e组件")," 的和谐画面。"))}l.isMDXComponent=!0},388:function(e,n,t){"use strict";t.d(n,"a",(function(){return i})),t.d(n,"b",(function(){return f}));var r=t(0),a=t.n(r),o=a.a.createContext({}),c=function(e){var n=a.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},i=function(e){var n=c(e.components);return a.a.createElement(o.Provider,{value:n},e.children)};var p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},l=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),l=c(t),f=r,b=l[i+"."+f]||l[f]||u[f]||o;return t?a.a.createElement(b,Object.assign({},{ref:n},p,{components:t})):a.a.createElement(b,Object.assign({},{ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,c=new Array(o);c[0]=l;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[p]="string"==typeof e?e:r,c[1]=i;for(var f=2;f<o;f++)c[f]=t[f];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}l.displayName="MDXCreateElement"}}]);