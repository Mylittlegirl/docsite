(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{204:function(e,n,o){"use strict";o.r(n),o.d(n,"frontMatter",(function(){return s})),o.d(n,"rightToc",(function(){return a})),o.d(n,"default",(function(){return u}));o(0);var t=o(265);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var o=arguments[n];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e}).apply(this,arguments)}function i(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)o=i[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)o=i[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s={id:"session",title:"session",sidebar_label:"session"},a=[{value:"基本概念",id:"基本概念",children:[]},{value:"与Cookie的关系与区别：",id:"与cookie的关系与区别：",children:[]}],c={rightToc:a},l="wrapper";function u(e){var n=e.components,o=i(e,["components"]);return Object(t.b)(l,r({},c,o,{components:n,mdxType:"MDXLayout"}),Object(t.b)("p",null,Object(t.b)("img",r({parentName:"p"},{src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/v09UXT.png",alt:null}))),Object(t.b)("p",null,"这里所指的Seesion是指服务器端的概念，你可以选则在把服务器端发过来的sessionid存到cookie活着session storage 当中。"),Object(t.b)("h2",{id:"基本概念"},"基本概念"),Object(t.b)("p",null,"Session是在无状态的HTTP协议下，服务端记录用户状态时用于标识具体用户的机制。它是在服务端保存的用来跟踪用户的状态的数据结构，可以保存在文件、数据库或者集群中。"),Object(t.b)("p",null,"在浏览器关闭后这次的Session就消失了，下次打开就不再拥有这个Session。其实并不是Session消失了，而是Session ID变了，服务器端可能还是存着你上次的Session ID及其Session 信息，只是他们是无主状态，也许一段时间后会被删除。"),Object(t.b)("p",null,"大多数的应用都是用Cookie来实现Session跟踪的，第一次创建Session的时候，服务端会在HTTP协议中告诉客户端，需要在Cookie里面记录一个SessionID，以后每次请求把这个会话ID发送到服务器。"),Object(t.b)("p",null,"当需要记住用户时，在服务端会设置一个响应头Set-Cookie，返回给客户端，例如：Set-Cookie:SESSIONID=12345678；客户端接收到这个响应后，此后发送的每一个请求浏览器都会自动带上Cookie请求头，对应内容是Cookie:SESSIONID=12345678。在服务端内存中存有session，将客户端发送的请求中的cookie值与内存中的session进行对比，就可以识别这个客户端了。"),Object(t.b)("h2",{id:"与cookie的关系与区别："},"与Cookie的关系与区别："),Object(t.b)("p",null,"1、Session是在服务端保存的一个数据结构，用来跟踪用户的状态，这个数据可以保存在集群、数据库、文件中，Cookie是客户端保存用户信息的一种机制，用来记录用户的一些信息，也是实现Session的一种方式。"),Object(t.b)("p",null,"2、Cookie的安全性一般，他人可通过分析存放在本地的Cookie并进行Cookie欺骗。在安全性第一的前提下，选择Session更优。重要交互信息比如权限等就要放在Session中，一般的信息记录放Cookie就好了。"),Object(t.b)("p",null,"3、单个Cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个Cookie。"),Object(t.b)("p",null,"4、当访问增多时，Session会较大地占用服务器的性能。考虑到减轻服务器性能方面，应当适时使用Cookie。"),Object(t.b)("p",null,"5、Session的运行依赖Session ID，而Session ID是存在 Cookie 中的。也就是说，如果浏览器禁用了Cookie,Session也会失效（但是可以通过其它方式实现，比如在url中传递Session ID,即sid=xxxx）。"))}u.isMDXComponent=!0},265:function(e,n,o){"use strict";o.d(n,"a",(function(){return a})),o.d(n,"b",(function(){return p}));var t=o(0),r=o.n(t),i=r.a.createContext({}),s=function(e){var n=r.a.useContext(i),o=n;return e&&(o="function"==typeof e?e(n):Object.assign({},n,e)),o},a=function(e){var n=s(e.components);return r.a.createElement(i.Provider,{value:n},e.children)};var c="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=Object(t.forwardRef)((function(e,n){var o=e.components,t=e.mdxType,i=e.originalType,a=e.parentName,c=function(e,n){var o={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&-1===n.indexOf(t)&&(o[t]=e[t]);return o}(e,["components","mdxType","originalType","parentName"]),u=s(o),p=t,b=u[a+"."+p]||u[p]||l[p]||i;return o?r.a.createElement(b,Object.assign({},{ref:n},c,{components:o})):r.a.createElement(b,Object.assign({},{ref:n},c))}));function p(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=o.length,s=new Array(i);s[0]=u;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[c]="string"==typeof e?e:t,s[1]=a;for(var p=2;p<i;p++)s[p]=o[p];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,o)}u.displayName="MDXCreateElement"}}]);