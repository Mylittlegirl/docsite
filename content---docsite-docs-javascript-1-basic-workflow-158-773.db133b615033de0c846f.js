(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{200:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return b}));n(0);var r=n(396);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c={title:"V8工作流程",sidebar_label:"V8工作流程"},o=[{value:"JS Engine",id:"js-engine",children:[]},{value:"V8 Engine Workflow",id:"v8-engine-workflow",children:[]},{value:"Parsing",id:"parsing",children:[{value:"AST",id:"ast",children:[]},{value:"Q: 函数没调用会不会生成AST？",id:"q-函数没调用会不会生成ast？",children:[]}]},{value:"Compiling",id:"compiling",children:[]}],l={rightToc:o},p="wrapper";function b(e){var t=e.components,n=i(e,["components"]);return Object(r.b)(p,a({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"js-engine"},"JS Engine"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Chrome: ",Object(r.b)("a",a({parentName:"li"},{href:"https://v8.dev/"}),"V8")),Object(r.b)("li",{parentName:"ul"},"FireFox: ",Object(r.b)("a",a({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey"}),"Spidermonkey")),Object(r.b)("li",{parentName:"ul"},"Edge: ",Object(r.b)("a",a({parentName:"li"},{href:"https://github.com/Microsoft/ChakraCore"}),"Chakra")),Object(r.b)("li",{parentName:"ul"},"Safari: ",Object(r.b)("a",a({parentName:"li"},{href:"https://trac.webkit.org/wiki/JavaScriptCore"}),"JavaScriptCore"))),Object(r.b)("h2",{id:"v8-engine-workflow"},"V8 Engine Workflow"),Object(r.b)("img",{src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/jyJKvS.jpg"}),Object(r.b)("p",null,"JS 代码块加载完毕后，会首先进入语法解析阶段。该阶段主要作用是生成 AST 和构建作用域。"),Object(r.b)("p",null,"从广义上讲，解析阶段主要包括 ",Object(r.b)("strong",{parentName:"p"},"词法分析(lexical analysis)")," 和 ",Object(r.b)("strong",{parentName:"p"},"语法分析(syntax analysis)"),"。"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"词法分析"),"：(分词)从代码中读取一组字符并将它们组合成语句(tokens)，它还涉及删除空格字符、注释等。最后，整个代码串将被拆分为一系列语句。"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"语法分析"),"：(也称为解析器)将在词法分析后获取一个简单的语句列表，并将其转换为树形表示即AST，并检查是否有语法错误。如果出现不正确，则向外抛出一个语法错误（SyntaxError），停止该JS代码的后续执行：")),Object(r.b)("img",{width:"400",src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/V5pGiz.jpg"}),Object(r.b)("h2",{id:"parsing"},"Parsing"),Object(r.b)("h3",{id:"ast"},"AST"),Object(r.b)("p",null,"可以去这个网站生成一个AST(Abstract Syntax Tree)试试：",Object(r.b)("a",a({parentName:"p"},{href:"https://astexplorer.net/"}),"https://astexplorer.net/")),Object(r.b)("img",{src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/Wc8x5N.jpg"}),Object(r.b)("h3",{id:"q-函数没调用会不会生成ast？"},"Q: 函数没调用会不会生成AST？"),Object(r.b)("p",null,"A: 会，AST是对整个代码都会生成，不管有没有调用，通过 ",Object(r.b)("a",a({parentName:"p"},{href:"https://astexplorer.net/"}),"https://astexplorer.net/")," 也可以看出。下面这段代码，从侧面也可以说明在进行语法分析生成AST。其实V8有用两个",Object(r.b)("inlineCode",{parentName:"p"},"Parser"),"，",Object(r.b)("inlineCode",{parentName:"p"},"Preparser")," 对这些不是迫切需要执行的代码(顶级代码、立即调用函数表达式IIFE)只构建作用域，会跳过AST，但由于 ",Object(r.b)("inlineCode",{parentName:"p"},"Ignition")," 的引入，现在并没有用到 ",Object(r.b)("inlineCode",{parentName:"p"},"Preparser"),"。"),Object(r.b)("img",{width:"400",src:"https://cosmos-x.oss-cn-hangzhou.aliyuncs.com/DVCIa0.jpg"}),Object(r.b)("h2",{id:"compiling"},"Compiling"),Object(r.b)("p",null,"这部分内容不重要，但理清楚基本概念，对后面深入学习十分有必要。我们人为地将解释器和编译器都划分在了编译阶段，有些文章用的是“预编译”这个词，虽然都不准确，但是所表达的意思都是相同的。"),Object(r.b)("p",null,"JS引擎为了提高速度采用即时编译（JIT）技术。执行之前立即将代码快速编译为机器码。通常最初由基线编译器编译，基线编译器可以快速生成非优化的机器代码。编译后的代码在运行时进行分析，并可选择使用更高级的优化编译器动态地重新编译，以实现最佳性能。只有在这种情况下，Ignition是基线编译器，它实际上是一个解释器。它取代了旧的full-codegen。"),Object(r.b)("p",null,"阅读更多："),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",a({parentName:"li"},{href:"https://app.yinxiang.com/fx/23ae9ccc-9086-4b93-b8d3-d15d0fcd6c51"}),"JS编译器")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",a({parentName:"li"},{href:"https://app.yinxiang.com/fx/67a2ad7e-3d41-4814-93fd-b4ee30a32407"}),"WebAssembly"))))}b.isMDXComponent=!0},396:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var r=n(0),a=n.n(r),i=a.a.createContext({}),c=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},o=function(e){var t=c(e.components);return a.a.createElement(i.Provider,{value:t},e.children)};var l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),b=c(n),s=r,u=b[o+"."+s]||b[s]||p[s]||i;return n?a.a.createElement(u,Object.assign({},{ref:t},l,{components:n})):a.a.createElement(u,Object.assign({},{ref:t},l))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=b;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[l]="string"==typeof e?e:r,c[1]=o;for(var s=2;s<i;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);