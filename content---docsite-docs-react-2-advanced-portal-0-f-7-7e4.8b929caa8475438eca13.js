(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{104:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));n(0);var r=n(249);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l={id:"portal",title:"Portal",sidebar_label:"Portal"},c=[{value:"什么是 Portal?",id:"什么是-portal",children:[]},{value:"为什么需要 Portal?",id:"为什么需要-portal",children:[]}],i={rightToc:c},p="wrapper";function b(e){var t=e.components,n=o(e,["components"]);return Object(r.b)(p,a({},i,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"什么是-portal"},"什么是 Portal?"),Object(r.b)("p",null,"Portal 中文即“传送门”的意思，看一张电影海报，不用多说，你应该能猜出来是什么意思："),Object(r.b)("p",null,Object(r.b)("img",a({parentName:"p"},{src:"https://raw.githubusercontent.com/ThinkBucket/oss/master/S3OAKe.jpg",alt:"doctor strange"}))),Object(r.b)("p",null,"Portals 提供了一种很好的将子节点渲染到父组件以外的 DOM 节点的方式。"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-jsx"}),"ReactDOM.createPortal(child, container)\n")),Object(r.b)("p",null,"第一个参数（",Object(r.b)("inlineCode",{parentName:"p"},"child"),"）是任何",Object(r.b)("a",a({parentName:"p"},{href:"https://reactjs.org/docs/react-component.html#render"}),"可渲染的 React 子元素"),"，例如一个元素，字符串或碎片。第二个参数（",Object(r.b)("inlineCode",{parentName:"p"},"container"),"）则是一个 DOM 元素。"),Object(r.b)("h2",{id:"为什么需要-portal"},"为什么需要 Portal?"),Object(r.b)("p",null,"React Portal 之所以叫 Portal，因为做的就是和“传送门”一样的事情：",Object(r.b)("strong",{parentName:"p"},"render到一个组件里面去，实际改变的是网页上另一处的DOM结构"),"。"),Object(r.b)("p",null,"在React的世界中，一切都是组件，用组件可以表示一切界面中发生的逻辑，不过，有些特例处理起来还比较麻烦，比如，某个组件在渲染时，在某种条件下需要显示一个对话框(Dialog)，这该怎么做呢？"),Object(r.b)("p",null,"最直观的做法，就是直接在JSX中把Dialog画出来，像下面代码的样子。"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-jsx"}),'<div class="foo">\n   <div> ... </div>\n   { needDialog ? <Dialog /> : null }\n</div>\n')),Object(r.b)("p",null,"问题是，我们写一个Dialog组件，就这么渲染的话，Dialog最终渲染产生的HTML就存在于上面JSX产生的HTML一起了，类似下面这样。"),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-jsx"}),'<div class="foo">\n   <div> ... </div>\n   <div class="dialog">Dialog Content</div>\n</div>\n')),Object(r.b)("p",null,"可是问题来了，对于对话框，从用户感知角度，应该是一个独立的组件，通常应该显示在屏幕的最中间，现在 Dialog 被包在其他组件中，要用CSS的 ",Object(r.b)("inlineCode",{parentName:"p"},"position")," 属性控制Dialog位置，就要求从Dialog往上一直到body没有其他 ",Object(r.b)("inlineCode",{parentName:"p"},"position: relative")," 的元素干扰，这……有点难为作为通用组件的 Dialog，毕竟，谁管得住所有组件不用 ",Object(r.b)("inlineCode",{parentName:"p"},"position")," 呢。"),Object(r.b)("p",null,"还有一点，Dialog的样式，因为包在其他元素中，各种样式纠缠，CSS样式太容易搞成一坨浆糊了。"),Object(r.b)("p",null,"看样子这样搞局限很多啊，行不通，有没有其他办法？"),Object(r.b)("p",null,"有一个其他办法，就是在React组件树的最顶层留一个元素专属于Dialog，然后通过Redux或者其他什么通讯方式给这个Dialog发送信号，让Dialog显示或者不显示。"))}b.isMDXComponent=!0},249:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r),o=a.a.createContext({}),l=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},c=function(e){var t=l(e.components);return a.a.createElement(o.Provider,{value:t},e.children)};var i="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),b=l(n),u=r,s=b[c+"."+u]||b[u]||p[u]||o;return n?a.a.createElement(s,Object.assign({},{ref:t},i,{components:n})):a.a.createElement(s,Object.assign({},{ref:t},i))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[i]="string"==typeof e?e:r,l[1]=c;for(var u=2;u<o;u++)l[u]=n[u];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);